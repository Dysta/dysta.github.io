[{"content":"Mise en contexte Bonjour √† tous ! Pour ce premier post sur mon blog j\u0026rsquo;aimerais vous partager un petit bout de code que j\u0026rsquo;avais fait il y a un moment.\nCertains d\u0026rsquo;entre vous l\u0026rsquo;ont utilis√©, mais pas tous. Il est √©galement inclus dans mon CMS priv√© PantyCMS afin de r√©cup√©rer des statistiques sur RPG.\nCe petit bout de code permet de parser une page RPG afin de r√©cup√©rer les infos suivantes :\nvaleur out le nom le nombre de vote la position dans le classement le graphe RPG (voir plus bas) J\u0026rsquo;ai r√©alis√© ce petit bout de code lorsque je codais la partie admin de mon CMS Dofus. J\u0026rsquo;ai r√©alis√© qu\u0026rsquo;avoir un r√©capitulatif automatique et pr√©cis de RPG Paradize directement dans le panel admin donnait une r√©elle plus value.\nCode Lorsque j\u0026rsquo;ai r√©alis√© le code, je l\u0026rsquo;ai fais en PHP pour rester sur la m√™me stack technique que le CMS et donc, faciliter son int√©gration. Cependant, il est facilement convertissable dans un autre langage comme Python ou Javascript (merci ChatGPT).\nJ\u0026rsquo;ai conscience que le code n\u0026rsquo;est pas des plus PHPiste qui existe √©tant donn√© mon niveau relativement basique dans le langage. Le code est donc prompt a diverses optimisation.\nInitialisation 1 2 3 4 5 6 7 \u0026lt;?php class RpgApi { public function __construct($id) { $this-\u0026gt;id = $id; } } ?\u0026gt; On commence par cr√©er notre object RpgApi en lui fournissant simplement l\u0026rsquo;id de notre page. Pour rappel, l\u0026rsquo;id de la page se trouve √† la fin de l\u0026rsquo;url. Par exemple, l\u0026rsquo;url https://www.rpg-paradize.com/site-Fun-Zandix+2.10-101961, l\u0026rsquo;id sera 101961. Notez √©galement que tout ce qui se situe entre le site- et -101961 est inutile et peu √™tre enlev√©. Ainsi, l\u0026rsquo;url https://www.rpg-paradize.com/site\u0026ndash;101961 est valide !\nNous pouvons donc initialiser notre api de cette fa√ßon :\n1 $RPG = new RpgApi(101961); R√©cup√©rer le nombre de vote Lorsque notre objet RpgApi est initialis√©, il nous permet de r√©cup√©rer de mani√®re tr√®s simple le nombre de vote grace √† la fonction publique getVote().\n1 2 3 4 5 6 7 8 9 10 11 12 13 /** * Return RPG vote * @return int vote number */ public function getVote() { if (empty($this-\u0026gt;webContent)) $this-\u0026gt;getWebContent(); if (empty($this-\u0026gt;votes)) $this-\u0026gt;parseVote(); return $this-\u0026gt;votes; } Cette m√©thode est en plusieurs temps. Elle va d\u0026rsquo;abord r√©cup√©rer le HTML de la page gr√¢ce √† la fonction priv√© getWebContent() pour ensuite parser le nombre de vote via la fonction parseVote(). La m√©thode qui permet de parser le nombre de vote n\u0026rsquo;est pas tr√®s compliqu√©. Elle repose sur une simple regEx qu\u0026rsquo;on applique sur le HTML r√©cup√©r√©.\n1 2 3 4 private function parseVote() { preg_match(\u0026#39;/Vote : (.*?)\u0026lt;\\/a\u0026gt;/\u0026#39;, $this-\u0026gt;webContent, $vote); $this-\u0026gt;votes = $vote[1]; } Le principe est similaire pour les autres m√©thodes √† l\u0026rsquo;exception de parseGraph().\nNous pouvons donc ajouter √† notre petit bout de code d\u0026rsquo;exemple le nombre de vote !\n1 2 3 4 $RPG = new RpgApi(101961); $vote = $RPG-\u0026gt;getVote(); echo \u0026#34;\u0026lt;p\u0026gt; Vote : \u0026#34; . vote . \u0026#34;\u0026lt;/p\u0026gt;\u0026#34;; Ici le nombre de vote est affich√© dans une balise paragraphe. Pour r√©cup√©rer d\u0026rsquo;autres info comme l\u0026rsquo;url ou le nombre de out, le principe est le m√™me.\nR√©cuperation du code HTML Comme dit pr√©c√©demment, le code HTML est r√©cup√©r√© via la fonction getWebContent(). Cette fonction est appel√©e en interne et utilise le module PHP curl.\n1 2 3 4 5 6 7 8 9 10 11 12 13 private function getWebContent() { $opts = array( CURLOPT_URL =\u0026gt; \u0026#39;http://rpg-paradize.com/site--\u0026#39; . $this-\u0026gt;id, CURLOPT_HEADER =\u0026gt; true, CURLOPT_RETURNTRANSFER =\u0026gt; true, CURLOPT_CONNECTTIMEOUT =\u0026gt; 3, CURLOPT_USERAGENT =\u0026gt; \u0026#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36 Edge/12.246\u0026#39; ); $ch = curl_init(); curl_setopt_array($ch, $opts); $this-\u0026gt;webContent = curl_exec($ch); curl_close($ch); } Je commence par initialiser un tableau avec tous mes param√®tres CURL. Le nom des param√®tres est d√©fini par le module curl lui m√™me. On peut voir que j\u0026rsquo;ai utilis√© la m√©thode de supprimer l\u0026rsquo;int√©rieur de l\u0026rsquo;url afin d\u0026rsquo;√™tre certain de tomber sur la bonne page. On continue en d√©finissant un header et des user-agents afin que notre requ√™te soit le moins suspecte possible. Puis on initialise notre objet curl en lui donnant les param√®tres et en envoyant la requ√™te.\nNotez que dans chaque fonction get*(), un if est effectu√© sur le contenu du HTML afin de ne le r√©cup√©rer qu\u0026rsquo;une seule fois et non √† chaque fois que nous voulons r√©cup√©rer une info comme ici sur getName() qui poss√®de une structure similaire √† getVote().\n1 2 3 4 5 6 7 8 9 10 11 12 13 /** * * Return RPG name * @return string name */ public function getName() { if (empty($this-\u0026gt;webContent)) $this-\u0026gt;getWebContent(); if (empty($this-\u0026gt;name)) $this-\u0026gt;parseName(); return $this-\u0026gt;name; } Si vous voulez donc rafra√Æchir les donn√©es contenu dans votre objet rpg, vous devez le recr√©er. Notez qu\u0026rsquo;une fonction permettant de rafra√Æchir le contenu n\u0026rsquo;est pas r√©ellement n√©cessaire vu que le site met √† jour les donn√©es que toutes les 3 heures environs. Cependant, cela reste possible de cette mani√®re :\n1 2 3 4 5 6 7 8 9 10 11 $RPG = new RpgApi(101961); $vote = $RPG-\u0026gt;getVote(); echo \u0026#34;\u0026lt;p\u0026gt; Vote : \u0026#34; . vote . \u0026#34;\u0026lt;/p\u0026gt;\u0026#34;; // many treatment... // we want to refresh data $RPG = new RpgApi(101961); $vote = $RPG-\u0026gt;getVote(); echo \u0026#34;\u0026lt;p\u0026gt; Vote : \u0026#34; . vote . \u0026#34;\u0026lt;/p\u0026gt;\u0026#34;; // will be an another number Graphe Comme dit plus haut, ce petit script permet de r√©cup√©rer le graphe RPG. Enfin.. il ne r√©cup√®re pas le graphe en lui-m√™me sinon √ßa serait beaucoup trop compliqu√© et tr√®s peu modulable. Il r√©cup√®re simplement les donn√©es servant √† construire le graphe sur RPG, √† savoir, la date d\u0026rsquo;un jour et le nombre de vote correspondant √† ce jour. De cette mani√®re, vous √™tes libres d\u0026rsquo;utiliser n\u0026rsquo;importe quelle biblioth√®que de votre choix afin de construire le graphe comme bon vous sembles.\nEn effet, RPG Paradize utilise la biblioth√®que Char.js pour g√©n√©rer ses graphes. Le fait de r√©cup√©rer seulement les donn√©es nous permet d\u0026rsquo;utiliser une autre biblioth√®que pour construire le graphe. Dans le screen ci-dessous, j\u0026rsquo;ai utilis√© la biblioth√®que Morris.js afin d\u0026rsquo;inclure le graphe RPG dans un panel admin..\nFig.1 \u0026ndash; PantyCMS \u0026ndash; Panel admin utilisant Morris.js pour g√©n√©rer le graphe Fig.2 \u0026ndash; RPG Paradize \u0026ndash; Graphe d\u0026rsquo;origine g√©n√©r√© avec Chart.js R√©cup√©ration des infos La r√©cup√©ration des infos du graphe se fait dans la fonction parseGraph(). Cette fonction construit un tableau de la forme suivante :\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 [ \u0026#34;key_id\u0026#34; = { \u0026#34;date\u0026#34;: \u0026#34;YYYY-MM-DD\u0026#34;, \u0026#34;vote\u0026#34;: 5 }, \u0026#34;key_id\u0026#34; = { \u0026#34;date\u0026#34;: \u0026#34;YYYY-MM-DD\u0026#34;, \u0026#34;vote\u0026#34;: 9 }, \u0026#34;key_id\u0026#34; = { \u0026#34;date\u0026#34;: \u0026#34;YYYY-MM-DD\u0026#34;, \u0026#34;vote\u0026#34;: 13 }, // ... ] Dans un premier temps, je fais comme les autres m√©thodes. j\u0026rsquo;applique une regEx sur le contenu HTML afin d\u0026rsquo;extraire une √©norme string contenant les labels (les dates) et la data (les votes) puis je cr√©e un tableau en s√©parant la string via les virgules entre chaque donn√©e.\n1 2 3 4 preg_match(\u0026#39;/labels : \\[(.*?)\\]/\u0026#39;,$this-\u0026gt;webContent, $label); preg_match(\u0026#39;/data : \\[(.*?)\\]/\u0026#39;, $this-\u0026gt;webContent, $data); $array_label = explode(\u0026#34;,\u0026#34;, $label[1]); $array_data = explode(\u0026#34;,\u0026#34;, $data[1]); Dans le tableau des dates, chaque date est entour√© de double quote. Il faut les enlever.\n1 2 foreach($array_label as $k =\u0026gt; $v) $array_label[$k] = substr($v, 1, -1); Je peux ensuite cr√©e le tableau final qui contient la donn√©e des labels nettoy√© en lui associant le bon nombre de vote\n1 2 3 4 5 $this-\u0026gt;graph = array(); foreach ($array_label as $k =\u0026gt; $v) { $this-\u0026gt;graph[$k][\u0026#39;date\u0026#39;] = $array_label[$k]; $this-\u0026gt;graph[$k][\u0026#39;vote\u0026#39;] = $array_data[$k]; } C\u0026rsquo;est ce tableau qui sera retourn√© √† l\u0026rsquo;utilisateur lorsqu\u0026rsquo;il appellera la fonction getGraph().\n1 2 3 4 5 6 7 8 9 10 11 12 13 /** * Return RPG graph data * @return array RPG graph data as array(\u0026#39;date\u0026#39;, \u0026#39;votes\u0026#39;) */ public function getGraph() { if (empty($this-\u0026gt;webContent)) $this-\u0026gt;getWebContent(); if (empty($this-\u0026gt;graph)) $this-\u0026gt;parseGraph(); return $this-\u0026gt;graph; } Exemples Les nombreux bout de code pr√©sent dans ce billet sont tir√©s du dossier exemple du repos GitHub disponible ici\nMerci de votre lecture et √† une prochaine ! üëã\n","permalink":"https://dysta.github.io/posts/api-rpg-paradize/","summary":"Mise en contexte Bonjour √† tous ! Pour ce premier post sur mon blog j\u0026rsquo;aimerais vous partager un petit bout de code que j\u0026rsquo;avais fait il y a un moment.\nCertains d\u0026rsquo;entre vous l\u0026rsquo;ont utilis√©, mais pas tous. Il est √©galement inclus dans mon CMS priv√© PantyCMS afin de r√©cup√©rer des statistiques sur RPG.\nCe petit bout de code permet de parser une page RPG afin de r√©cup√©rer les infos suivantes :","title":"Une API pour RPG Paradize ?"},{"content":"Exp√©riences Professionnelles ‚Ä¢ Benebono, Paris, France D√©veloppeur Backend Go \u0026ndash; Mai 2023 ‚Üí Maintenant D√©veloppement et maintenance des APIs de Benebono.\n‚Ä¢ OVHCloud, Bordeaux, France D√©veloppeur Go/AngularJS/Perl \u0026ndash; Mai 2022 ‚Üí Mars 2023 D√©veloppement et maintenance des outils internes d\u0026rsquo;OVHCloud. Prise de contact avec les clients afin d\u0026rsquo;identifier leurs besoins.\n‚Ä¢ ThermoFisher Scientific, Bordeaux, France Stagiaire d√©veloppeur Python/Cython/C++ \u0026ndash; Avril 2021 ‚Üí Aout 2021 D√©veloppement d\u0026rsquo;une API en Python pour le client permettant l\u0026rsquo;int√©raction direct avec la GUI du logiciel Avizo/Amira.\nScolarit√© ‚Ä¢ Master Informatique, Bordeaux, France Cursus g√©nie logiciel \u0026ndash; Septembre 2019 ‚Üí Aout 2021 TODO\n‚Ä¢ Licence Informatique, Bordeaux, France Coloration informatique \u0026ndash; Septembre 2016 ‚Üí Aout 2019 TODO\n‚Ä¢ Lyc√©e de Borda, Dax, France Bac STI2D \u0026ndash; Septembre 2013 ‚Üí Aout 2016 TODO\nComp√©tences Programmation Langage Niveau Python3 ‚ö™Ô∏è‚ö™Ô∏è‚ö™Ô∏è‚ö™Ô∏è‚ö´Ô∏è HTML/CSS/JS ‚ö™Ô∏è‚ö™Ô∏è‚ö™Ô∏è‚ö™Ô∏è‚ö´Ô∏è Go ‚ö™Ô∏è‚ö™Ô∏è‚ö™Ô∏è‚ö´Ô∏è‚ö´Ô∏è Java 8 ‚ö™Ô∏è‚ö™Ô∏è‚ö™Ô∏è‚ö´Ô∏è‚ö´Ô∏è PHP ‚ö™Ô∏è‚ö™Ô∏è‚ö™Ô∏è‚ö´Ô∏è‚ö´Ô∏è C ‚ö™Ô∏è‚ö™Ô∏è‚ö™Ô∏è‚ö´Ô∏è‚ö´Ô∏è NodeJS ‚ö™Ô∏è‚ö™Ô∏è‚ö´Ô∏è‚ö´Ô∏è‚ö´Ô∏è Autres ","permalink":"https://dysta.github.io/cv/","summary":"cv","title":"Curriculum Vitae"},{"content":"","permalink":"https://dysta.github.io/discord/","summary":"discord","title":"Redirection..."}]